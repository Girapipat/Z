# convert_models_to_tflite.py
import tensorflow as tf

def convert_h5_to_tflite(h5_path, tflite_path):
    print(f"üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏õ‡∏•‡∏á {h5_path} ‚Üí {tflite_path} ...")
    model = tf.keras.models.load_model(h5_path)
    converter = tf.lite.TFLiteConverter.from_keras_model(model)
    
    # ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£ Optimize ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå
    converter.optimizations = [tf.lite.Optimize.DEFAULT]
    
    tflite_model = converter.convert()
    with open(tflite_path, "wb") as f:
        f.write(tflite_model)
    print(f"‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à: {tflite_path}")

if __name__ == "__main__":
    # ‡πÅ‡∏õ‡∏•‡∏á classifier
    convert_h5_to_tflite(
        h5_path="classifier_model.h5",
        tflite_path="classifier_model.tflite"
    )

    # ‡πÅ‡∏õ‡∏•‡∏á regression
    convert_h5_to_tflite(
        h5_path="regression_model.h5",
        tflite_path="regression_model.tflite"
    )
